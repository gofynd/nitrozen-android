apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "publish_build.gradle"

buildscript {
    ext.kotlin_version = '1.3.31'
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }

    }

    ext {
        ARTIFACT_USERNAME = "regrowth_deploy"
        ARTIFACT_PASSWORD = "deploy@regrowth!"
        artifactPublishPath = 'com.fynd'
        libraryPublish = 'snapshot'
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath 'io.fabric.tools:gradle:1.+'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.1.0-alpha04"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.9.7"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 3
        versionName "1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        vectorDrawables.useSupportLibrary = true

        signingConfigs {
            debugConfig {
                resValue "string", "library_version", "snapshot"
            }
            releaseConfig {
                resValue "string", "library_version", "release"
            }
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    packagingOptions {
        exclude 'META-INF/library_release.kotlin_module'
        exclude 'META-INF/workspace_release.kotlin_module'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            versionNameSuffix "release"
            signingConfig signingConfigs.releaseConfig
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        pre_release {
            minifyEnabled false
            versionNameSuffix "snapshot"
            consumerProguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
            zipAlignEnabled false
        }

        debug {
            resValue "string", "app_name_header", System.getenv("APP_NAME_USER_AGENT") as String ?: "Personalize-Fynd-Store"
            resValue "string", "affiliate_access_token", System.getenv("APPLICATION_TOKEN") as String ?: ""
            resValue "string", "affiliate_id", System.getenv("APPLICATION_ID") as String ?: ""
            minifyEnabled false
            versionNameSuffix "snapshot"
        }

        libraryVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "nitrozen-${variant.name}.aar"
            }
        }
        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/ASL2.0'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}


repositories {
    maven {
        url "http://artifactory.gofynd.com/artifactory/android-release-local"
        credentials {
            username = "${rootProject.ext.ARTIFACT_USERNAME}"
            password = "${rootProject.ext.ARTIFACT_PASSWORD}"
        }
    }
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
    jcenter()
    google()
    maven { url 'https://maven.google.com' }
    maven { url 'https://jitpack.io' }
    flatDir {
        dirs 'src/main/libs'
        dirs 'libs'
    }
}

afterEvaluate {
    def debugFile = file("$buildDir/outputs/aar/nitrozen-debug.aar")
    tasks.named("assembleDebug").configure {
        doLast {
            debugFile.renameTo("$buildDir/outputs/aar/nitrozen-snapshot.aar")
        }
    }
    tasks.named("assembleRelease").configure {
        doLast {
            debugFile.renameTo("$buildDir/outputs/aar/nitrozen-release.aar")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
