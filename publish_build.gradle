apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

def isReleaseBuild() {
    def buildType = System.getenv("BUILD_TYPE") as String ?: 'debug'
    return buildType.toLowerCase().contains('release')
}


def getArtifactFilePath() {
    if (isReleaseBuild()) {
        return "$buildDir/outputs/aar/nitrozen-release.aar"
    } else {
        return "$buildDir/outputs/aar/nitrozen-snapshot.aar"
    }
}

def getArtifactVersion() {
    if (isReleaseBuild()) {
        return "${project.android.defaultConfig.versionName}-release"
    } else {
        return "${project.android.defaultConfig.versionName}-snapshot"
    }
}

project.afterEvaluate {
    publishing {
        publications {
            aar(MavenPublication) {
                groupId rootProject.ext.artifactPublishPath
                version getArtifactVersion()
                artifactId "nitrozen"

                // Tell maven to prepare the generated "*.aar" file for publishing
                artifact(getArtifactFilePath())

                pom.withXml {
                    def dependencies = asNode().appendNode('dependencies')
                    configurations.getByName("releaseCompileClasspath").getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                        def dependency = dependencies.appendNode('dependency')
                        dependency.appendNode('groupId', it.moduleGroup)
                        dependency.appendNode('artifactId', it.moduleName)
                        dependency.appendNode('version', it.moduleVersion)
                    }
                }
            }
        }
    }
}

artifactory {
    contextUrl = 'http://artifactory.gofynd.com/artifactory'
    publish {
        repository {
            // The Artifactory repository key to publish to
            repoKey = 'android-release-local'
            username = rootProject.ext.ARTIFACT_USERNAME
            password = rootProject.ext.ARTIFACT_PASSWORD
        }
        defaults {
            // Tell the Artifactory Plugin which artifacts should be published to Artifactory.
            publications('aar')
            publishArtifacts = true

            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team': 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}